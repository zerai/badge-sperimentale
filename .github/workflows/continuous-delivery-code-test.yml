name: Tests

on:
  push:


  pull_request:
    branches: [ main ]


env:
  #GITHUB_PAT: ${{ secrets.BADGE_SPERIMENTALE_GHA_PAT }}
  COVERAGE: '0'
  PHP_EXTENSIONS: ctype, curl, gd, iconv, intl, opcache, openssl, mbstring, mysql, pdo_sqlite
  PHP_EXTENSIONS_CACHE_KEY: cache-php-extensions-v1


jobs:
  env-vars:
    name: Reveal env vars (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2

      -
        name: Reveal env vars
        run: |
          echo GITHUB_WORKFLOW   = $GITHUB_WORKFLOW
          echo HOME              = $HOME
          echo GITHUB_ACTION     = $GITHUB_ACTION
          echo GITHUB_ACTIONS    = $GITHUB_ACTIONS
          echo GITHUB_ACTOR      = $GITHUB_ACTOR
          echo GITHUB_REPOSITORY = $GITHUB_REPOSITORY
          echo GITHUB_EVENT_NAME = $GITHUB_EVENT_NAME
          echo GITHUB_EVENT_PATH = $GITHUB_EVENT_PATH
          echo GITHUB_WORKSPACE  = $GITHUB_WORKSPACE
          echo GITHUB_SHA        = $GITHUB_SHA
          echo GITHUB_REF        = $GITHUB_REF


  phpunit:
    name: Code tests (PHP ${{ matrix.php }})
    runs-on: ubuntu-20.04
    services:
      api-mock-server:
        image: mockserver/mockserver:mockserver-5.11.2
        ports:
          - 1080/tcp

    strategy:
      matrix:
        php:
          - '7.4'
        include:
          - php: '7.4'
            coverage: true
      fail-fast: true

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Setup php extension cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      -
        name: Cache PHP extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      -
        name: setup-php
        id: setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: date.timezone=Europe/Rome, memory_limit=-1
          coverage: xdebug
          tools: symfony

      -
        name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      -
        name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      -
        name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

      -
        name: Run test on support code (phpunit custom assertions)
        run: ./vendor/bin/phpunit --testsuite phpunit-extension

      -
        name: Enable code coverage
        if: matrix.coverage
        run: echo "COVERAGE=1" >> $GITHUB_ENV

      -
        name: Run unit test
        id: unit-test
        run: |
          if [ "$COVERAGE" = '1' ]; then
            mkdir -p reports/phpunit
            ./vendor/bin/phpunit --testsuite unit --coverage-clover reports/phpunit/unit-test-clover.xml --log-junit reports/phpunit/unit-test-junit.xml
            echo "::set-output name=exit_code::$(echo -n "$?")"
          else
            ./vendor/bin/phpunit --testsuite unit
          fi

      -
        name: Upload unit tests coverage to Codecov
        if: ${{ (matrix.php == '7.4') && (steps.unit-test.outcome == 'success')}}
        uses: codecov/codecov-action@v1
        with:
          files: ./reports/phpunit/unit-test-clover.xml
          flags: unit-tests
          name: codecov-php-7.4
          fail_ci_if_error: true

      -
        name: Run support test
        run: ./vendor/bin/phpunit --testsuite support

      -
        name: Run integration test
        run: ./vendor/bin/phpunit --testsuite integration --group io-network
        env:
          API_MOCK_SERVER: http://127.0.0.1:${{ job.services.api-mock-server.ports[1080] }}

      -
        name: Run acceptance test
        run: ./vendor/bin/phpunit --testsuite acceptance
        env:
          API_MOCK_SERVER: http://127.0.0.1:${{ job.services.api-mock-server.ports[1080] }}
